#![no_std]

use panic_abort as _;
use fake::fake;

fake!(_SystemPrng);
fake!(AcceptSecurityContext);
fake!(AcquireCredentialsHandleW);
fake!(AddCredentialsW);
fake!(ApplyControlToken);
fake!(BCryptCloseAlgorithmProvider);
fake!(BCryptCreateHash);
fake!(BCryptDecrypt);
fake!(BCryptDeriveKey);
fake!(BCryptDeriveKeyCapi);
fake!(BCryptDeriveKeyPBKDF2);
fake!(BCryptDestroyHash);
fake!(BCryptDestroyKey);
fake!(BCryptDestroySecret);
fake!(BCryptDuplicateHash);
fake!(BCryptDuplicateKey);
fake!(BCryptEncrypt);
fake!(BCryptEnumAlgorithms);
fake!(BCryptEnumProviders);
fake!(BCryptExportKey);
fake!(BCryptFinalizeKeyPair);
fake!(BCryptFinishHash);
fake!(BCryptFreeBuffer);
fake!(BCryptGenRandom);
fake!(BCryptGenerateKeyPair);
fake!(BCryptGenerateSymmetricKey);
fake!(BCryptGetFipsAlgorithmMode);
fake!(BCryptGetProperty);
fake!(BCryptHashData);
fake!(BCryptImportKey);
fake!(BCryptImportKeyPair);
fake!(BCryptKeyDerivation);
fake!(BCryptOpenAlgorithmProvider);
fake!(BCryptRegisterConfigChangeNotify);
fake!(BCryptResolveProviders);
fake!(BCryptSecretAgreement);
fake!(BCryptSetProperty);
fake!(BCryptSignHash);
fake!(BCryptUnregisterConfigChangeNotify);
fake!(BCryptVerifySignature);
fake!(CompleteAuthToken);
fake!(CredMarshalTargetInfo);
fake!(DeleteSecurityContext);
fake!(EnumerateSecurityPackagesW);
fake!(ExportSecurityContext);
fake!(FreeContextBuffer);
fake!(FreeCredentialsHandle);
fake!(GetSecurityUserInfo);
fake!(ImpersonateSecurityContext);
fake!(ImportSecurityContextW);
fake!(InitSecurityInterfaceW);
fake!(InitializeSecurityContextW);
fake!(KSecRegisterSecurityProvider);
fake!(KSecValidateBuffer);
fake!(LsaEnumerateLogonSessions);
fake!(LsaGetLogonSessionData);
fake!(MakeSignature);
fake!(MapSecurityError);
fake!(QueryContextAttributesW);
fake!(QueryCredentialsAttributesW);
fake!(QuerySecurityContextToken);
fake!(QuerySecurityPackageInfoW);
fake!(RevertSecurityContext);
fake!(SealMessage);
fake!(SecLookupAccountName);
fake!(SecLookupAccountSid);
fake!(SecLookupWellKnownSid);
fake!(SecMakeSPN);
fake!(SecMakeSPNEx);
fake!(SecMakeSPNEx2);
fake!(SecSetPagingMode);
fake!(SetCredentialsAttributesW);
fake!(SslDecryptPacket);
fake!(SslEncryptPacket);
fake!(SslExportKey);
fake!(SslFreeObject);
fake!(SslGetExtensions);
fake!(SslGetServerIdentity);
fake!(SslImportKey);
fake!(SslLookupCipherSuiteInfo);
fake!(SslOpenProvider);
fake!(SspiAcceptSecurityContextAsync);
fake!(SspiAcquireCredentialsHandleAsyncW);
fake!(SspiCompareAuthIdentities);
fake!(SspiCopyAuthIdentity);
fake!(SspiCreateAsyncContext);
fake!(SspiDeleteSecurityContextAsync);
fake!(SspiEncodeAuthIdentityAsStrings);
fake!(SspiEncodeStringsAsAuthIdentity);
fake!(SspiFreeAsyncContext);
fake!(SspiFreeAuthIdentity);
fake!(SspiFreeCredentialsHandleAsync);
fake!(SspiGetAsyncCallStatus);
fake!(SspiInitializeSecurityContextAsyncW);
fake!(SspiLocalFree);
fake!(SspiMarshalAuthIdentity);
fake!(SspiReinitAsyncContext);
fake!(SspiSetAsyncNotifyCallback);
fake!(SspiSetChannelBindingFlags);
fake!(SspiUnmarshalAuthIdentity);
fake!(SspiValidateAuthIdentity);
fake!(SspiZeroAuthIdentity);
fake!(TokenBindingGetHighestSupportedVersion);
fake!(TokenBindingGetKeyTypesServer);
fake!(TokenBindingVerifyMessage);
fake!(UnsealMessage);
fake!(VerifySignature);
